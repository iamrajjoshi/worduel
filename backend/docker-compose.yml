# Docker Compose for Worduel Backend
# For local development and testing

version: '3.8'

services:
  worduel-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime-debug  # Use debug version with alpine for local dev
    ports:
      - "${PORT:-8080}:8080"
    environment:
      # Server Configuration
      - PORT=8080
      - HOST=0.0.0.0
      - READ_TIMEOUT=30s
      - WRITE_TIMEOUT=30s
      - IDLE_TIMEOUT=120s
      - SHUTDOWN_TIMEOUT=30s
      
      # CORS Configuration
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
      - ALLOW_CREDENTIALS=true
      - MAX_AGE=3600
      
      # Rate Limiting
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS_PER_MINUTE=60
      - RATE_LIMIT_BURST=10
      
      # Security
      - VALIDATE_ORIGIN=false  # Relaxed for development
      - REQUIRE_HOST_HEADER=false
      - SECURE_HEADERS=false
      
      # Logging
      - LOG_LEVEL=debug
      - LOG_FORMAT=text  # Human readable for development
      - DEBUG_MODE=true
      
      # Sentry (disabled for local dev)
      - SENTRY_ENABLED=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    volumes:
      # Mount environment file if it exists
      - ./.env.development:/app/.env.development:ro
    networks:
      - worduel-network

  # Additional services can be added here as needed
  # For example: database, redis, monitoring tools, etc.

networks:
  worduel-network:
    driver: bridge

# Useful Docker Compose commands:
# 
# Development (with debug image):
#   docker-compose up --build
#
# Build production image:
#   docker-compose build --target production
#
# Run with environment file:
#   docker-compose --env-file .env.development up
#
# Scale the backend:
#   docker-compose up --scale worduel-backend=2